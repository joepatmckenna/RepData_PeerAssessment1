debug(ls)
ls
setwd("~/Dropbox/data_science/05_reproducible_research/RepData_PeerAssessment1")
dataset <- read.csv(unz('activity.zip', 'activity.csv'))
head(dataset)
library(knitr)
opts_chunk$set(echo=T)
steps <- read.csv(unz('activity.zip', 'activity.csv'))
rm(dataset)
class(steps)
names(steps)
class(steps$date)
head(steps$date)
?read.csv
as.Date(steps$date,'%Y-%m-%d')
steps <- read.csv(unz('activity.zip', 'activity.csv'))
steps$date <- with(steps, as.Date(date, '%Y-%m-%d'))
as.Date(steps$date,'%Y-%m-%d')steps
steps
names(stpes)
names(steps)
hist(steps$steps)
library(knitr)
library(ggplot2)
opts_chunk$set(echo=T)
qplot(steps$steps)
qplot(steps$steps, facets = .~dae)
qplot(steps$steps, facets = .~date)
qplot(steps, data=steps, facets = .~date)
unique(steps$date)
aggregate(steps, date)
aggregate(steps, date, sum)
with(steps, aggregate(steps, date, sum))
?aggregate
with(steps, aggregate(steps, list(date), sum))
qplot(aggregate(steps, list(date), sum), data=steps)
qplot(aggregate(steps$steps, list(steps$date), sum), data=steps)
qplot(aggregate(steps$steps, list(steps$date), sum))
with(steps, aggregate(steps, list(date), sum))
x<-with(steps, aggregate(steps, list(date), sum))
class(x)
names(x)
dim(x)
x
qplot(x)
qplot(x[,2])
qplot(aggregate(steps$steps, list(steps$date), sum)[,2], data=steps)
qplot(aggregate(steps, list(date), sum)[,2], data=steps)
qplot(aggregate(steps, list(date), sum)[,2], data=steps)
qplot(aggregate(steps$steps, list(steps$date), sum)[,2])
qplot(aggregate(steps, list(date), sum)[,1], data=steps)
qplot(aggregate(steps, list(date), sum)[,2], data=steps)
qplot(aggregate(steps$steps, list(steps$date), sum)[,2])
x<-with(steps, aggregate(steps, list(date), sum, na.rm=T))
qplot(x[,2])
qplot(aggregate(steps$steps, list(steps$date), sum, na.rm=T)[,2], binwidth=1)
qplot(aggregate(steps$steps, list(steps$date), sum, na.rm=T)[,2], binwidth=100)
qplot(aggregate(steps$steps, list(steps$date), sum, na.rm=T)[,2], binwidth=300)
qplot(aggregate(steps$steps, list(steps$date), sum, na.rm=T)[,2], binwidth=500)
qplot(aggregate(steps$steps, list(steps$date), sum, na.rm=T)[,2])
qplot(aggregate(steps$steps, list(steps$date), sum, na.rm=T)[,2], bins=10)
qplot(aggregate(steps$steps, list(steps$date), sum, na.rm=T)[,2], bins=20)
qplot(aggregate(steps$steps, list(steps$date), sum, na.rm=T)[,2], bins=30)
qplot(aggregate(steps$steps, list(steps$date), sum, na.rm=T)[,2], bins=25)
qplot(aggregate(steps$steps, list(steps$date), sum, na.rm=T)[,2], bins=25) +
labs(x='Total steps in one day')
x
x<-with(steps, aggregate(steps, list(date), sum))
y<-with(steps, aggregate(steps, list(date), sum, na.rm=T))
x
y
x
qplot(aggregate(steps$steps, list(steps$date), sum)[,2], bins=25) +
labs(x='Total steps in one day')
steps_by_day <- with(steps, aggregate(steps, list(date), sum)
qplot(steps_by_day[,2], bins=25) + labs(x='Steps', main='Total steps per day')
steps_by_day <- with(steps, aggregate(steps, list(date), sum))
qplot(steps_by_day[,2], bins=25) + labs(x='Steps', main='Total steps per day')
steps$date
length(unique(steps$date))
## total number of steps taken per day
steps_by_day <- with(steps, aggregate(steps, list(date), sum))
## histogram
qplot(steps_by_day[,2], bins=25) + labs(x='Steps', main='Total steps per day')
mean(steps_by_day)
## total number of steps taken per day
steps_by_day <- with(steps, aggregate(steps, list(date), sum))
colnames(steps_by_day) <- c('date','steps')
## histogram
qplot(steps_by_day[,2], bins=25) + labs(x='Steps', main='Total steps per day')
## total number of steps taken per day
steps_by_day <- with(steps, aggregate(steps, list(date), sum))
colnames(steps_by_day) <- c('date','steps')
## histogram
qplot(steps_by_day$steps, bins=25) + labs(main='Total steps per day')
## total number of steps taken per day
steps_by_day <- with(steps, aggregate(steps, list(date), sum))
colnames(steps_by_day) <- c('date','steps')
## histogram
qplot(steps, data=steps_by_day, bins=25) + labs(main='Total steps per day')
mean(steps_by_day$steps)
mean(steps_by_day$steps, na.rm=T)
names(steps)
## total number of steps taken per day
avg_day <- with(steps, aggregate(steps, list(interval), mean))
avg_day
## total number of steps taken per day
avg_day <- with(steps, aggregate(steps, list(interval), mean, na.rm=T))
colname(avg_day) <- c('interval','steps')
## total number of steps taken per day
avg_day <- with(steps, aggregate(steps, list(interval), mean, na.rm=T))
colnames(avg_day) <- c('interval','steps')
avg_day
## total number of steps taken per day
avg_day <- with(steps, aggregate(steps, list(interval), mean, na.rm=T))
colnames(avg_day) <- c('interval','steps')
qplot(interval, steps, data=avg_day)
## total number of steps taken per day
avg_day <- with(steps, aggregate(steps, list(interval), mean, na.rm=T))
colnames(avg_day) <- c('interval','steps')
qplot(interval, steps, data=avg_day, type='l')
## total number of steps taken per day
avg_day <- with(steps, aggregate(steps, list(interval), mean, na.rm=T))
colnames(avg_day) <- c('interval','steps')
qplot(interval, steps, data=avg_day, type='l') + geom_line()
## total number of steps taken per day
avg_day <- with(steps, aggregate(steps, list(interval), mean, na.rm=T))
colnames(avg_day) <- c('interval','steps')
qplot(interval, steps, data=avg_day, type='l') +
geom_line() +
labs(main='Average Daily Activity')
avg_day
which.max(avg_day$steps)
which.max(avg_day$steps)
avg_day[which.max(avg_day$steps)]
avg_day[which.max(avg_day$steps),]
avg_day[which.max(avg_day$steps),'steps']
complete.cases(steps)
!complete.cases(steps)
sum(!complete.cases(steps))
dim(steps)
head(steps)
head(avg_day
)
interval_avg <- function(interval) { avg_day[avg_day$interval==interval,'steps'] }
interval_avg(0)
interval_avg(5)
interval_avg(10)
interval_avg(15)
interval_avg(20)
interval_avg(25)
library(dplyr)
?transform
with(steps[!complete.cases(steps),], transform(steps, interval_avg(interval)))
names(steps)
head(steps[!complete.cases(steps),])
steps$steps[!complete.cases(steps),] <- interval_avg(steps$steps[!complete.cases(steps),interval])
steps$steps[!complete.cases(steps),] <- interval_avg(steps$interval[!complete.cases(steps)])
steps$interval[!complete.cases(steps)]
interval_avg(steps$interval[!complete.cases(steps)])
steps$interval[!complete.cases(steps)]
interval_avg(1115)
interval_avg(steps$interval[!complete.cases(steps)])
head(steps$interval[!complete.cases(steps)],n=290)
interval_avg(0)
sum(is.na(steps$steps))
sum(is.na(steps$date))
sum(is.na(steps$interval))
na_steps = is.na(steps$steps)
steps$steps[na_steps]
steps$interval[na_steps]
interval_avg(steps$interval[na_steps])
steps$interval[na_steps]
steps$interval[na_steps][1:4]
steps$interval[na_steps][300:400]
interval_avg(steps$interval[na_steps][300:305])
?mutate
?sapply
sapply(steps$interval[na_steps], interval_avg)
which(avg_day,0)
avg_day
## impute missing values with interval average
na <- is.na(steps$steps)
steps[na] <- avg_day[1+steps$interval[na]/5]
avg_day
steps[na]
missing
## impute missing values with interval average
is_na <- is.na(steps$steps)
steps[is_na] <- avg_day[1+steps$interval[is_na]/5,'steps']
steps$interval[is_na]
steps$interval[is_na]
steps$interval[is_na]/5+1
steps$interval[is_na]
summarY(steps$interval[is_na])
summary(steps$interval[is_na])
summary(steps$interval)
summary(avg_day$interval)
len(avg_day)
length(avg_day)
dim(avg_day)
2355/5+1
avg_day
2355/5+1
avg_day$interval
avg_day$interval
avg_day$interval[which(0)]
match(avg_day$interval,2355)
match(2355,avg_day$interval)
## impute missing values with interval average
steps_na <- is.na(steps$steps)
steps[steps_na] <- avg_day[match(interval[steps_na], avg_day$interval),'steps']
## impute missing values with interval average
steps_na <- is.na(steps$steps)
steps[steps_na] <- avg_day[match(steps$interval[steps_na], avg_day$interval),'steps']
steps[steps_na]
## impute missing values with interval average
steps_na <- is.na(steps$steps)
steps[steps_na,'steps'] <- avg_day[match(steps$interval[steps_na], avg_day$interval),'steps']
steps
head(steps)
weekdays(steps$date)
steps$weekpart <- factor(ifelse(weekdays(steps$date) %in% c('Saturday','Sunday'), 'weekend', 'weekday'))
head(steps)
steps
table(steps$weekpart)
12960/4608
1/7
5/2
steps$weekpart
steps$weekpart <- factor(ifelse(weekdays(steps$date)%in%c('Saturday','Sunday'),'weekend','weekday'))
avg_day <- with(steps, aggregate(steps, list(weekpart, interval), mean))
colnames(avg_day) <- c('weekpart','interval','steps')
avg_day
steps$weekpart <- factor(ifelse(weekdays(steps$date)%in%c('Saturday','Sunday'),'weekend','weekday'))
avg_day <- with(steps, aggregate(steps, list(weekpart, interval), mean))
colnames(avg_day) <- c('weekpart','interval','steps')
qplot(interval, steps, data=avg_day, group_by(weekpart))
steps$weekpart <- factor(ifelse(weekdays(steps$date)%in%c('Saturday','Sunday'),'weekend','weekday'))
avg_day <- with(steps, aggregate(steps, list(weekpart, interval), mean))
colnames(avg_day) <- c('weekpart','interval','steps')
qplot(interval, steps, data=avg_day, group_by(weekpart))
steps$weekpart <- factor(ifelse(weekdays(steps$date)%in%c('Saturday','Sunday'),'weekend','weekday'))
avg_day <- with(steps, aggregate(steps, list(weekpart, interval), mean))
colnames(avg_day) <- c('weekpart','interval','steps')
qplot(interval, steps, data=avg_day)
steps$weekpart <- factor(ifelse(weekdays(steps$date)%in%c('Saturday','Sunday'),'weekend','weekday'))
avg_day <- with(steps, aggregate(steps, list(weekpart, interval), mean))
colnames(avg_day) <- c('weekpart','interval','steps')
qplot(interval, steps, data=avg_day, facets=weekpart~.)
steps$weekpart <- factor(ifelse(weekdays(steps$date)%in%c('Saturday','Sunday'),'weekend','weekday'))
avg_day <- with(steps, aggregate(steps, list(weekpart, interval), mean))
colnames(avg_day) <- c('weekpart','interval','steps')
qplot(interval, steps, data=avg_day, facets=weekpart~.) + line_geom()
steps$weekpart <- factor(ifelse(weekdays(steps$date)%in%c('Saturday','Sunday'),'weekend','weekday'))
avg_day <- with(steps, aggregate(steps, list(weekpart, interval), mean))
colnames(avg_day) <- c('weekpart','interval','steps')
qplot(interval, steps, data=avg_day, facets=weekpart~.) + geom_line()
rm(list=ls())
